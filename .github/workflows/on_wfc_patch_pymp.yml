name: 'on wfc patch pymp'

on:
  workflow_call:
    inputs:
      environment:
        type: string
        description: 'environment'
        required: true
      version:
        type: string
        description: 'version'
        required: true

permissions:
  contents: write

concurrency: 
  group: patch_pymp-${{ github.event.client_payload.environment }}"
  cancel-in-progress: false

jobs:

  update-patches:
    strategy:
      fail-fast: false
      matrix:
        image:
          - pymp_frontend
          - pymp_server
          
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check image manifest
        run: |
          docker manifest inspect ghcr.io/tomp736/pymp/${{ matrix.image }}:${{ inputs.version }}
      
      - name: Update deployment images
        run: |
          yq e '.spec.template.spec.containers[0].image = "ghcr.io/tomp736/pymp/${{ matrix.image }}:${{ inputs.version }}"' -i applications/pymp/patches/${{ matrix.image }}.version.patch.yaml
      
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: patches
          path: applications/pymp/patches/${{ matrix.image }}.version.patch.yaml
          retention-days: 1

  commit-patches:
    needs: 
      - update-patches

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: patches
          path: applications/pymp/patches
          
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          
      - run: |
          for file in applications/pymp/patches/*; 
          do 
            echo "Adding $file"
            cat $file
            git add $file
          done
          
      - run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "Changes detected"
            git commit -am "Update Pymp Version : ${{ inputs.version }}"
            git push
          else
            echo "No changes detected"
          fi